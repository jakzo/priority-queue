{"version":3,"file":"codeshift.js.map","sources":["../src/main.js"],"sourcesContent":["/**\n * JavaScript implementation of a binary-heap priority queue.\n */\nexport default class PriorityQueue extends Array {\n  /**\n   * @param {?Function} compare Function used to compare the priority of two\n   *    items. It is passed two arguments and should return `true` if the first\n   *    item has a greater priority than the second, otherwise `false`.\n   */\n  constructor(compare = PriorityQueue.defaultCompare) {\n    super();\n    this.compare = compare;\n  }\n\n  /**\n   * Pushes an element onto the queue.\n   * @param  {*} item Element to be pushed onto the queue.\n   * @return {number} The number of items on the queue after the push.\n   */\n  push(item) {\n    // Add the item at the bottom of the heap\n    const length = Array.prototype.push.call(this, item);\n    // Bubble it up to its correct position (until it reaches a node with a\n    // greater priority or it becomes the root node)\n    let i = length - 1,\n        parent = i - 1 >> 1;\n    while (i > 0 && this.compare(item, this[parent])) {\n      this[i] = this[parent];\n      this[parent] = item;\n      i = parent;\n      parent = i - 1 >> 1;\n    }\n    return length;\n  }\n\n  /**\n   * Removes and returns the item with the highest priority.\n   * @return {*} The item with the highest priority in the queue.\n   */\n  pop() {\n    // Get the item with the highest priority (it will be at index 0)\n    const popped = this[0];\n    // Rebalance the tree by putting the item with the lowest priority at the\n    // top then bubbling it down to its correct position\n    const item = Array.prototype.pop.call(this);\n    let i = 0,\n        ia = 1,\n        ib = 2;\n    while (ib < this.length) {\n      // Swap the item with the child which has a higher priority\n      if (this.compare(this[ia], this[ib])) {\n        this[i] = this[ia];\n        i = ia;\n      } else {\n        this[i] = this[ib];\n        i = ib;\n      }\n      ia = (i * 2) + 1;\n      ib = (i * 2) + 2;\n    }\n    // If the final pair of children only contains one item, don't compare both\n    // children, but we do need to compare it with the item we are bubbling\n    // because it used to be the other item in this pair and may have been the\n    // item with the higher priority\n    if (this.length !== 0) {\n      if (ib === this.length && !this.compare(item, this[ia])) {\n        this[i] = this[ia];\n        i = ia;\n      }\n      this[i] = item;\n    }\n    return popped;\n  }\n}\n\n/**\n * The comparison function which is used if no comparison function is passed\n * into the constructor. By default it just evaluates `a < b`.\n * @type {Function}\n * @param {*} a First element to compare.\n * @param {*} b Second element to compare.\n * @return {boolean} `true` if `a < b`.\n */\nPriorityQueue.defaultCompare = (a, b) => a < b;\n"],"names":["super","const","let","this"],"mappings":";;;;;;AAAA;;;AAGA,IAAqB,aAAa;EAAe,sBAMpC,CAAC,OAAsC,EAAE;qCAAjC,GAAG,aAAa,CAAC,cAAc;;IAChDA,KAAK,KAAA,CAAC,IAAA,CAAC,CAAC;IACR,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;GACxB;;;;sDAAA;;;;;;;EAOD,wBAAA,IAAI,kBAAC,IAAI,EAAE;;;;IAETC,IAAM,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;IAGrDC,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC;QACd,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACxB,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;MAChDC,MAAI,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,MAAM,CAAC,CAAC;MACvBA,MAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;MACpB,CAAC,GAAG,MAAM,CAAC;MACX,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACrB;IACD,OAAO,MAAM,CAAC;GACf,CAAA;;;;;;EAMD,wBAAA,GAAG,mBAAG;;;;IAEJF,IAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;;IAGvBA,IAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5CC,IAAI,CAAC,GAAG,CAAC;QACL,EAAE,GAAG,CAAC;QACN,EAAE,GAAG,CAAC,CAAC;IACX,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE;;MAEvB,IAAIC,MAAI,CAAC,OAAO,CAACA,MAAI,CAAC,EAAE,CAAC,EAAEA,MAAI,CAAC,EAAE,CAAC,CAAC,EAAE;QACpCA,MAAI,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,EAAE,CAAC,CAAC;QACnB,CAAC,GAAG,EAAE,CAAC;OACR,MAAM;QACLA,MAAI,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,EAAE,CAAC,CAAC;QACnB,CAAC,GAAG,EAAE,CAAC;OACR;MACD,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;MACjB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAClB;;;;;IAKD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;MACrB,IAAI,EAAE,KAAK,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;QACvD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QACnB,CAAC,GAAG,EAAE,CAAC;OACR;MACD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KAChB;IACD,OAAO,MAAM,CAAC;GACf,CAAA;;;EArEwC,KAsE1C;;;;;;;;;;AAUD,aAAa,CAAC,cAAc,GAAG,UAAC,CAAC,EAAE,CAAC,EAAE,SAAG,CAAC,GAAG,CAAC,GAAA,CAAC;;;;"}